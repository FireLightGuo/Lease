<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ph.lease.dao.OrderMapper">

    <resultMap id="orderResultMap" type="Order">
        <!-- property属性是对应实体类的属性名，column是数据库对应表中的列名 -->
        <id property="id" column="id"/>
        <result property="cid" column="c_id"/>
        <result property="type" column="type"/>
        <result property="creationDate" column="creation_date"/>
        <result property="valid" column="valid"/>
        <association property="customer" javaType="Customer">
            <id property="id" column="c_id"/>
            <result property="name" column="name"/>
            <result property="telephone" column="telephone"/>
        </association>
        <!-- autoMapping属性只对实体类属性名和数据库列名相同的进行映射 -->
        <!-- 对于重名需要别名的列，名称不同的列都需要手动映射 -->
        <collection property="orderDetails" ofType="OrderDetail" autoMapping="true">
            <id property="id" column="tod_id"/>
            <result property="oid" column="o_id"/>
            <result property="mid" column="m_id"/>
            <result property="creationDate" column="tod_creation_date"/>
            <association property="material" javaType="Material">
                <id property="id" column="m_id"/>
                <result property="name" column="tm_name"/>
                <result property="model" column="model"/>
                <result property="specification" column="specification"/>
            </association>
        </collection>
    </resultMap>

    <!-- 插入订单 -->
    <insert id="insert" parameterType="Order">
        insert into tbl_order(id, c_id, type, creation_date)
        values (#{id}, #{cid}, #{type}, #{creationDate})
    </insert>

    <!-- 根据查询条件查询，客户姓名，日期范围 -->
    <select id="selectFuzzyOrderByDateDesc" parameterType="OrderSearch" resultMap="orderResultMap">
        select o.id,
        o.c_id,
        o.type,
        o.creation_date,
        o.valid,
        tc.name,
        tc.telephone,
        tc.password,
        tc.address,
        tc.create_date,
        tc.valid,
        tod.id as tod_id,
        tod.o_id,
        tod.m_id,
        tod.amount,
        tod.creation_date as tod_creation_date,
        tod.valid,
        tm.name as tm_name,
        tm.model,
        tm.specification,
        tm.unit,
        tm.price,
        tm.stocks,
        tm.total,
        tm.description,
        tm.cost,
        tm.valid
        from tbl_order o
        left join tbl_customer tc on o.c_id = tc.id
        left join tbl_order_detail tod on o.id = tod.o_id
        left join tbl_material tm on tod.m_id = tm.id
        where o.valid = 't'
        <if test="name != null">
            and tc.name like concat('%', #{name}, '%')
        </if>
        <if test="start != null">
            and o.creation_date >= #{start}
        </if>
        <if test="end != null">
            and #{end} >= o.creation_date
        </if>
        order by o.creation_date desc
    </select>

    <!-- 根据最近的订单ID -->
    <select id="selectLatestOrderID" resultType="String">
        select id
        from tbl_order
        where valid = 't'
        order by creation_date desc
        limit 1
    </select>

    <!-- 根据客户编号查询客户订单 -->
    <select id="selectOrderByCustomerID" parameterType="Customer" resultMap="orderResultMap">
        select o.id,
               o.type,
               o.creation_date,
               tod.m_id,
               tod.amount,
               tm.name as tm_name,
               tm.model,
               tm.specification
        from tbl_order o
                 left join tbl_order_detail tod on o.id = tod.o_id
                 left join tbl_material tm on tod.m_id = tm.id
        where o.valid = 't'
          and c_id = #{id}
        order by o.creation_date desc
    </select>

    <!-- 删除订单，软删除 -->
    <delete id="delete" parameterType="Order">
        update tbl_order
        set valid = 'f'
        where id = #{id}
    </delete>

</mapper>